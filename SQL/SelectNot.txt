-- Total number of tests
SELECT COUNT(*) AS total_tests FROM Test;

-- List of score, specifying for each the name and first name of the student who obtained it
SELECT N.score, S.name, S.firstname
FROM Notation N
INNER JOIN Student S ON N.numstud = S.numstud;

-- List of score, specifying for each the name and first name of the student who obtained it and the wording of the matter concerned
SELECT N.score, S.name, S.firstname, M.wording
FROM Notation N
INNER JOIN Student S ON N.numstud = S.numstud
INNER JOIN Test T ON N.numtest = T.numtest
INNER JOIN Matter M ON T.codemat = M.codemat;

-- List of score greater than or equal to 10
SELECT N.score, S.name, S.firstname
FROM Notation N
JOIN Student S ON N.numstud = S.numstud
WHERE score >= 10;

-- Last name and first name of the students who obtained at least a score equal to 20
SELECT S.name, S.firstname
FROM Student S
INNER JOIN Notation N ON S.numstud = N.numstud
WHERE N.score = 20;

-- Average scores for each student (indicate name and first name)
SELECT name, firstname, AVG(score) AS average_score
FROM Notation
JOIN Student ON Notation.numstud = Student.numstud
GROUP BY name, firstname;

SELECT S.name, S.firstname, AVG(N.score) AS average_score
FROM Student S
INNER JOIN Notation N ON S.numstud = N.numstud
GROUP BY S.name, S.firstname;

-- List of tests whose date is between January 1 and June 30, 2014
SELECT * FROM Test
WHERE testdate BETWEEN '2014-01-01' AND '2014-06-30';

-- List of tests (number, date, and place) including the matter of the subject
SELECT T.numtest, T.testdate, T.place, M.wording
FROM Test T
INNER JOIN Matter M ON T.codemat = M.codemat;

-- Average scores for each student (indicate name and first name), ranked from best to worst
SELECT S.name, S.firstname, AVG(N.score) AS average_score
FROM Student S
INNER JOIN Notation N ON S.numstud = N.numstud
GROUP BY S.name, S.firstname
ORDER BY average_score DESC;

-- Average scores for matter (indicate the wording) comprising more than one test
SELECT wording, AVG(score) AS average_score
FROM Notation
JOIN Test ON Notation.numtest = Test.numtest
JOIN Matter ON Test.codemat = Matter.codemat
GROUP BY wording
HAVING COUNT(DISTINCT Test.numtest) > 1;

SELECT M.wording, AVG(N.score) AS average_score
FROM Matter M
INNER JOIN Test T ON M.codemat = T.codemat
INNER JOIN Notation N ON T.numtest = N.numtest
GROUP BY M.wording
HAVING COUNT(DISTINCT T.numtest) > 1;

-- Average of score obtained in the tests (indicate the number of the test) where less than 6 students were rated
SELECT T.numtest, AVG(N.score) AS average_score
FROM Test T
INNER JOIN Notation N ON T.numtest = N.numtest
GROUP BY T.numtest
HAVING COUNT(DISTINCT N.numstud) < 6;

-- Commit changes
COMMIT;
